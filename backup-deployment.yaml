# This deployment fires up the dummy service that we are trying to protect from overload when it enters an unhealthy state, so that it can recover. Because this backup-deployment 
# exposes a /fakeerrormodeon endpoint, we can make it "fake" an error that will trigger the circuit breaker by returning a 503 from the /ready endpoint (see server.js)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backup-deployment
spec:
  # For simplicity we'll just fire up a single replica in our load balancer for this service
  replicas: 1
  selector:
    matchLabels:
      run: backup-deployment
  template:
    metadata:
      labels:
        run: backup-deployment
    spec:
      containers:
      - name: backup-depoyment
        image:                                ### ToDo: fill the value by the docker imagename (e.g. us.gcr.io/<project-id>/dummyservice)
        ports:
        - containerPort: 80
        livenessProbe:
          httpGet:
            # The /alive endpoint is the one we will not touch in our test case, as this will trigger a kill and recreate from Kubernetes when this does not return 200
            path: /alive
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10